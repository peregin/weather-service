version: 2.1

defaults:
  cache_key: &cache_key 'v1-{{ checksum "build.gradle.kts" }}'

executors:
  ci-jdk:
    docker:
      - image: cimg/openjdk:17.0.10
        environment:
          JVM_OPTS: -Dfile.encoding=UTF-8 -Dsun.jnu.encoding=UTF-8
  ci-min:
    docker:
      - image: cimg/base:2024.11

commands:
  restart_service:
    parameters:
      service_name:
        type: string
    steps:
      - add_ssh_keys:
          fingerprints:
            - "SHA256:0JgoOo+PO4Mp19b3ZkJ7BfWmo8dzLFS+e6ryCmJ2u1s"
      - run:
          name: restart << parameters.service_name >> service
          command: |
            ssh -o StrictHostKeyChecking=accept-new \
                -o BatchMode=yes \
                -o ConnectTimeout=10 \
                -o ServerAliveInterval=60 \
                -o ServerAliveCountMax=3 \
                -o UserKnownHostsFile=/dev/null \
                "$DEPLOYER_USER"@velocorner.com "/opt/velocorner/service-update.sh << parameters.service_name >>"
          no_output_timeout: 5m

jobs:
  build_weather-backend:
    executor: ci-jdk
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - restore_cache:
          key: *cache_key
      - run:
          name: test weather service
          command: |
            ./gradlew test
      - run:
          name: build weather service
          command: |
            ./gradlew shadowJar
      - save_cache:
          key: *cache_key
          paths:
            - ~/.gradle
      - persist_to_workspace:
          root: .
          paths:
            - build/libs
            - Dockerfile*
            - deploy.sh

  deploy_weather-backend:
    executor: ci-min
    resource_class: arm.medium
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: dockerhub login
          command: docker login -u peregin -p $DOCKERHUB_PASSWORD docker.io
      - run:
          name: deploy weather service
          command: ./deploy.sh Dockerfile.ci

  restart_stack:
    executor: ci-min
    resource_class: small
    steps:
      - restart_service:
          service_name: weather

workflows:
  version: 2
  ci_cd:
    jobs:
      - build_weather-backend
      - deploy_weather-backend:
          context: peregin
          requires:
            - build_weather-backend
          filters:
            branches:
              only: /^master.*/
      - restart_stack:
          context: peregin
          requires:
            - deploy_weather-backend

